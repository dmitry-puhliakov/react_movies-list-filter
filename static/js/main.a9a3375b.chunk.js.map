{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","SearchBar","state","query","handleQueryChange","event","setState","target","value","prevProps","prevState","this","props","updateQuery","htmlFor","type","id","placeholder","onChange","Component","App","normalizedQuery","toLowerCase","visibleMovies","moviesFromServer","filter","movi","includes","ReactDOM","render","document","getElementById"],"mappings":"8vEAIaA,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,ICvBH,IAAMK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAWEC,kBAAoB,SAACC,GACnB,EAAKC,SACH,CAAEH,MAAOE,EAAME,OAAOC,SAb5B,wDAKE,SAAmBC,EAAWC,GACxBA,EAAUP,QAAUQ,KAAKT,MAAMC,OACjCQ,KAAKC,MAAMC,YAAYF,KAAKT,MAAMC,SAPxC,oBAiBE,WACE,OACE,yBAAKb,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOwB,QAAQ,eAAexB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEyB,KAAK,OACLC,GAAG,eACH1B,UAAU,QACV2B,YAAY,mBACZC,SAAUP,KAAKP,2BA/B7B,GAA+Be,a,eCMlBC,EAAb,4MACElB,MAAQ,CACNC,MAAO,IAFX,EAKEU,YAAc,SAACL,GACb,EAAKF,SAAS,CAAEH,MAAOK,KAN3B,4CASE,WACE,IACMa,EADYV,KAAKT,MAAfC,MACsBmB,cAExBC,EAAgBC,EAAiBC,QAAO,SAAAC,GAAI,OAChDA,EAAKxC,MAAMoC,cAAcK,SAASN,IAC/BK,EAAKvC,YAAYmC,cAAcK,SAASN,MAG7C,OACE,yBAAK/B,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAWuB,YAAaF,KAAKE,cAE7B,kBAAC,EAAD,CAAYjB,OAAQ2B,KAEtB,yBAAKjC,UAAU,WAAf,0BAzBR,GAAyB6B,aCJzBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a9a3375b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SearchBar extends Component {\n  state = {\n    query: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.props.updateQuery(this.state.query);\n    }\n  }\n\n  handleQueryChange = (event) => {\n    this.setState(\n      { query: event.target.value },\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"input\"\n              placeholder=\"Type search word\"\n              onChange={this.handleQueryChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  updateQuery: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { SearchBar } from './components/SearchBar/SearchBar';\n\nimport './App.scss';\n\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  updateQuery = (value) => {\n    this.setState({ query: value });\n  };\n\n  render() {\n    const { query } = this.state;\n    const normalizedQuery = query.toLowerCase();\n\n    const visibleMovies = moviesFromServer.filter(movi => (\n      movi.title.toLowerCase().includes(normalizedQuery)\n      || movi.description.toLowerCase().includes(normalizedQuery)\n    ));\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchBar updateQuery={this.updateQuery} />\n\n          <MoviesList movies={visibleMovies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}